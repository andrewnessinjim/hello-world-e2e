version: 2.1

commands:
  install-heroku:
    steps:
      - run:
          name: "Install heroku (If not already installed)"
          command: |
                if [[ $(command -v heroku) == "" ]]; then
                  curl https://cli-assets.heroku.com/install.sh | sh
                else
                  echo "Heroku is already installed. No operation was performed."
                fi

  build-image:
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: "Build production docker image with tag name <<parameters.tag>>"
          command: "docker build -t <<parameters.tag>> ."

  publish-to-heroku:
    parameters:
      heroku-app-name:
        type: string
    steps:
      - run:
          name: "Login to heroku"
          command: "heroku container:login"
      - run:
          name: "Push image to heroku"
          command: "docker push registry.heroku.com/<<parameters.heroku-app-name>>/web"
      - run:
          name: "Release the image"
          command: "heroku container:release web --app <<parameters.heroku-app-name>>"

jobs:
  build-docker-image:
    docker:
      - image: cimg/base:2021.11
    resource_class: small
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - checkout
      - when:
          condition:
            and:
              - equal: [develop, <<pipeline.git.branch>>]
          steps:
            - run:
                name: "Run e2e tests in docker-compose env"
                command: "docker-compose -f ./e2e/docker-compose.circleci-dev.yml up  --exit-code-from cypress"
      - when:
          condition:
            and:
              - equal: [production, <<pipeline.git.branch>>]
          steps:
            - build-image:
                tag: registry.heroku.com/hello-world-e2e-staging/web
            - install-heroku
            - publish-to-heroku:
                heroku-app-name: hello-world-e2e-staging
            - run:
                name: "Run e2e tests against heroku staging env"
                command: "docker-compose -f ./e2e/docker-compose.circleci-staging.yml up  --exit-code-from cypress"
            - run:
                name: "Tag docker image for heroku production env"
                command: "docker tag registry.heroku.com/hello-world-e2e-staging/web registry.heroku.com/hello-world-e2e/web"
            - publish-to-heroku:
                heroku-app-name: hello-world-e2e

workflows:
  build-image:
    when:
      or:
        - equal: [develop, <<pipeline.git.branch>>]
        - equal: [circleci, <<pipeline.git.branch>>]
        - equal: [production, <<pipeline.git.branch>>]
    jobs:
      - build-docker-image
